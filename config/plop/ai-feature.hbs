/**
 * {{name}} AI Feature
 * 
 * This is a specialized AI feature template with built-in architecture safeguards.
 * It follows Planora's architectural principles with additional AI-specific patterns.
 *
 * @module features/{{name}}
 * @category AI Features
 */

// =======================================
// DIRECTORY STRUCTURE (Generated by Plop)
// =======================================
/**
 * src/features/{{name}}/
 * ├── {{name}}Api.ts         # Public API boundary
 * ├── types.ts               # Type definitions
 * ├── README.md              # Feature documentation
 * ├── components/            # Feature-specific components
 * ├── hooks/                 # Feature-specific hooks
 * │   └── use{{pascalCase name}}.ts
 * ├── services/              # Feature-specific services
 * │   ├── {{name}}Service.ts
 * │   └── {{name}}AIService.ts
 * ├── utils/                 # Feature-specific utilities
 * │   ├── prompts.ts         # AI prompts and templates
 * │   ├── validation.ts      # Input/output validation
 * │   └── sanitization.ts    # Data sanitization
 * └── models/                # AI model interfaces
 *     └── {{name}}Model.ts
 */

// =======================================
// ARCHITECTURAL GUIDELINES
// =======================================
/**
 * 1. ISOLATED MODEL ACCESS
 *    - AI models should only be accessed through dedicated service classes
 *    - All direct model calls must be wrapped with error handling
 *
 * 2. DATA SAFETY
 *    - All inputs to AI models must be sanitized and validated
 *    - All outputs from AI models must be validated before use
 *    - Sensitive data should never be sent to external AI services
 *
 * 3. ASYNC PATTERNS
 *    - All AI operations should be treated as asynchronous
 *    - Implement proper loading states and error handling
 *    - Consider progressive enhancement for critical features
 *
 * 4. VERSIONING
 *    - Track AI model versions used for reproducibility
 *    - Document model capabilities and limitations
 *    - Implement feature flags for experimental AI features
 *
 * 5. ETHICS & PRIVACY
 *    - Implement consent mechanisms where appropriate
 *    - Document data usage and retention policies
 *    - Include bias monitoring and mitigation strategies
 */

// Example utility types will be available in the generated types.ts file
